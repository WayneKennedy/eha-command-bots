{
  "name": "General Vance - Discord Bot",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "general-vance",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1.1,
      "position": [240, 300],
      "webhookId": "general-vance"
    },
    {
      "parameters": {
        "jsCode": "// Extract message data from Discord bot\nconst data = $input.first().json;\nconst userMessage = data.message.content;\nconst userName = data.author.displayName || data.author.username;\nconst userId = data.author.id;\n\n// General Vance personality\nconst systemPrompt = `You are General Vance, Fleet Commander of the Elite Horizon Alliance (EHA).\n\nCallsign: Horizon Actual\nRank: General\nRole: Fleet Commander - Overall strategic command of EHA operations\n\nPersonality:\n- Strategic visionary with decades of military experience\n- Calm, measured, and authoritative leadership style\n- Values discipline, preparation, and tactical excellence\n- Shows genuine care for personnel welfare and mission success\n- Uses military terminology naturally but remains accessible\n- Balances strategic thinking with understanding ground-level concerns\n\nBackground:\nYou command the Elite Horizon Alliance, a Star Citizen military organization composed of three specialized divisions:\n- Nexus Division (Commander Atlay): Heavy combat and assault operations\n- Morozov Division (Commander Hunter): Reconnaissance and tactical operations  \n- VoidWalkers Division: Specialized operations (currently reorganizing)\n\nCommunication Style:\n- Address personnel respectfully (use their names when known)\n- Be direct and clear, but not cold\n- Provide strategic context for decisions\n- Acknowledge good work and effort\n- Sign off as \"General Vance\" or \"Horizon Actual\"\n- Use military terminology appropriately (SITREP, ROE, OpSec, etc.)\n- Keep responses concise and actionable\n\nCurrent Situation:\nYou are coordinating operations in the Star Citizen universe. The organization is focused on building cohesion, training effectiveness, and preparing for larger-scale operations.\n\nRespond to the following message in character:`;\n\n// Build messages for Claude API\nconst messages = [\n  {\n    role: 'user',\n    content: `Message from ${userName}: ${userMessage}`\n  }\n];\n\nreturn {\n  json: {\n    systemPrompt: systemPrompt,\n    messages: messages,\n    channelId: data.message.channelId,\n    originalMessageId: data.message.id,\n    userName: userName\n  }\n};"
      },
      "id": "prepare-claude-request",
      "name": "Prepare Claude Request",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.anthropic.com/v1/messages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "anthropicApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "anthropic-version",
              "value": "2023-06-01"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"claude-3-5-sonnet-20241022\",\n  \"max_tokens\": 1024,\n  \"system\": {{ JSON.stringify($json.systemPrompt) }},\n  \"messages\": {{ JSON.stringify($json.messages) }}\n}",
        "options": {}
      },
      "id": "call-claude-api",
      "name": "Call Claude API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [680, 300],
      "credentials": {
        "anthropicApi": {
          "id": "anthropic-credentials",
          "name": "Anthropic API"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Extract Claude's response\nconst claudeResponse = $input.first().json;\nconst responseText = claudeResponse.content[0].text;\n\n// Get data from previous node\nconst preparedData = $node[\"Prepare Claude Request\"].json;\n\nreturn {\n  json: {\n    response: responseText,\n    channelId: preparedData.channelId,\n    success: true\n  }\n};"
      },
      "id": "extract-response",
      "name": "Extract Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $json }}"
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://discord.com/api/v10/channels/{{ $json.channelId }}/messages",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "discordApi",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"content\": {{ JSON.stringify($json.response) }}\n}",
        "options": {}
      },
      "id": "send-to-discord",
      "name": "Send to Discord",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [900, 140],
      "credentials": {
        "discordApi": {
          "id": "discord-bot-credentials",
          "name": "Discord Bot Token"
        }
      }
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Prepare Claude Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Claude Request": {
      "main": [
        [
          {
            "node": "Call Claude API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Call Claude API": {
      "main": [
        [
          {
            "node": "Extract Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Response": {
      "main": [
        [
          {
            "node": "Send to Discord",
            "type": "main",
            "index": 0
          },
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-10-11T00:00:00.000Z",
  "versionId": "1"
}
